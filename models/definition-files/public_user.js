/*jslint node: true */
"use strict";
/*------------------------------------------------------------------------------------

DO NOT EDIT THIS FILE !!! It is generated automatically and will be overwritten.

To modify this models:
1. Create 'user.js' file in 'definition-files-custom' directory located in this file's parent directory.
2. Copy the code below and paste it into 'user.js'.
3. Use utility methods to easily access orm properties.

"use strict";
var orm     = require('models\index.js'),
    models   = require('./user.js'),
    util    = require('../utils.js')(models),
    Seq     = orm.Sequelize();

module.exports = models;

// Some utility methods:
util.getRelation("frequentUserFks").onDelete = 'CASCADE'; 
util.getAttribute("userId").comment = 'This is the comment'; 

------------------------------------------------------------------------------------*/
var orm = require('../index.js'),
    Seq = orm.Sequelize();
module.exports = {
    modelName: "public.user",
    options: {
        tableName: "user",
        schema: "public",
        timestamps: false
    },
    attributes: {
        "userId": {
            type: Seq.INTEGER,
            field: "user_id",
            primaryKey: true,
            autoIncrement: true,
            allowNull: false,
            unique: "user_pk"
        },
        "userFirstname": {
            type: Seq.STRING(50),
            field: "user_firstname",
            allowNull: false
        },
        "userName": {
            type: Seq.STRING(50),
            field: "user_name",
            allowNull: false
        },
        "userDateInscription": {
            type: Seq.DATEONLY,
            field: "user_date_inscription",
            allowNull: false
        },
        "userMail": {
            type: Seq.STRING(50),
            field: "user_mail",
            allowNull: false
        },
        "userPhone": {
            type: Seq.STRING(10),
            field: "user_phone",
            allowNull: false
        },
        "userPseudo": {
            type: Seq.STRING(50),
            field: "user_pseudo",
            allowNull: false
        },
        "userDescription": {
            type: Seq.STRING(200),
            field: "user_description"
        },
        "userVisibility": {
            type: Seq.STRING(20),
            field: "user_visibility",
            allowNull: false
        },
        "userPicture": {
            type: Seq.BLOB,
            field: "user_picture"
        }
    },
    relations: [{
        type: "hasMany",
        model: "public.frequent",
        schema: "public",
        table: "frequent",
        source: "generator",
        details: {
            as: "frequentUserFks",
            foreignKey: "user_id",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.isFriend",
        schema: "public",
        table: "is_friend",
        source: "generator",
        details: {
            as: "isFriendUserFks",
            foreignKey: "user_id",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.isFriend",
        schema: "public",
        table: "is_friend",
        source: "generator",
        details: {
            as: "isFriendUser0Fks",
            foreignKey: "user_id_have_friend",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.own",
        schema: "public",
        table: "own",
        source: "generator",
        details: {
            as: "ownUser0Fks",
            foreignKey: "user_id",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.participate",
        schema: "public",
        table: "participate",
        source: "generator",
        details: {
            as: "participateUser0Fks",
            foreignKey: "user_id",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.group",
        schema: "public",
        table: "group",
        source: "generator",
        details: {
            as: "frequentUserFkGroups",
            foreignKey: "user_id",
            otherKey: "group_id",
            through: "frequent",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.place",
        schema: "public",
        table: "place",
        source: "generator",
        details: {
            as: "frequentUserFkPlaces",
            foreignKey: "user_id",
            otherKey: "place_id",
            through: "frequent",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.user",
        schema: "public",
        table: "user",
        source: "generator",
        details: {
            as: "relatedIsFriendUserFkUserIdHaveFriends",
            foreignKey: "user_id",
            otherKey: "user_id_have_friend",
            through: "is_friend",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.user",
        schema: "public",
        table: "user",
        source: "generator",
        details: {
            as: "isFriendUser0FkUsers",
            foreignKey: "user_id_have_friend",
            otherKey: "user_id",
            through: "is_friend",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.group",
        schema: "public",
        table: "group",
        source: "generator",
        details: {
            as: "ownUser0FkGroups",
            foreignKey: "user_id",
            otherKey: "group_id",
            through: "own",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.group",
        schema: "public",
        table: "group",
        source: "generator",
        details: {
            as: "participateUser0FkGroups",
            foreignKey: "user_id",
            otherKey: "group_id",
            through: "participate",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }]
};