/*jslint node: true */
"use strict";
/*------------------------------------------------------------------------------------

DO NOT EDIT THIS FILE !!! It is generated automatically and will be overwritten.

To modify this model:
1. Create 'place.js' file in 'definition-files-custom' directory located in this file's parent directory.
2. Copy the code below and paste it into 'place.js'.
3. Use utility methods to easily access orm properties.

"use strict";
var orm     = require('model/index.js'),
    model   = require('./place.js'),
    util    = require('../utils.js')(model),
    Seq     = orm.Sequelize();

module.exports = model;

// Some utility methods:
util.getRelation("belongPlace0Fks").onDelete = 'CASCADE'; 
util.getAttribute("placeId").comment = 'This is the comment'; 

------------------------------------------------------------------------------------*/
var orm = require('../index.js'),
    Seq = orm.Sequelize();
module.exports = {
    modelName: "public.place",
    options: {
        tableName: "place",
        schema: "public",
        timestamps: false
    },
    attributes: {
        "placeId": {
            type: Seq.INTEGER,
            field: "place_id",
            primaryKey: true,
            autoIncrement: true,
            allowNull: false,
            unique: "place_pk"
        },
        "placeName": {
            type: Seq.STRING(50),
            field: "place_name",
            allowNull: false
        },
        "placeDescription": {
            type: Seq.STRING(500),
            field: "place_description",
            allowNull: false
        },
        "placeAdressNum": {
            type: Seq.STRING(50),
            field: "place_adress_num",
            allowNull: false
        },
        "placeAdressStreet": {
            type: Seq.STRING(250),
            field: "place_adress_street",
            allowNull: false
        },
        "placeAdressPostalCode": {
            type: Seq.STRING(5),
            field: "place_adress_postal_code",
            allowNull: false
        },
        "placeAdressCity": {
            type: Seq.STRING(50),
            field: "place_adress_city",
            allowNull: false
        },
        "placeAdressCountry": {
            type: Seq.STRING(50),
            field: "place_adress_country",
            allowNull: false
        },
        "placeAdressDetails": {
            type: Seq.STRING(250),
            field: "place_adress_details"
        },
        "placeMapLat": {
            type: Seq.STRING(50),
            field: "place_map_lat"
        },
        "placeMapLon": {
            type: Seq.STRING(50),
            field: "place_map_lon"
        }
    },
    relations: [{
        type: "hasMany",
        model: "public.belong",
        schema: "public",
        table: "belong",
        source: "generator",
        details: {
            as: "belongPlace0Fks",
            foreignKey: "place_id",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.frequentGroup",
        schema: "public",
        table: "frequent_group",
        source: "generator",
        details: {
            as: "frequentGroupPlaceFks",
            foreignKey: "place_id",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.frequentUser",
        schema: "public",
        table: "frequent_user",
        source: "generator",
        details: {
            as: "frequentUserPlace0Fks",
            foreignKey: "place_id",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.type",
        schema: "public",
        table: "type",
        source: "generator",
        details: {
            as: "belongPlace0FkTypes",
            foreignKey: "place_id",
            otherKey: "type_id",
            through: "belong",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.frequentDate",
        schema: "public",
        table: "frequent_date",
        source: "generator",
        details: {
            as: "relatedFrequentGroupPlaceFkFrequentDateStarts",
            foreignKey: "place_id",
            otherKey: "frequent_date_start",
            through: "frequent_group",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.group",
        schema: "public",
        table: "group",
        source: "generator",
        details: {
            as: "frequentGroupPlaceFkGroups",
            foreignKey: "place_id",
            otherKey: "group_id",
            through: "frequent_group",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.frequentDate",
        schema: "public",
        table: "frequent_date",
        source: "generator",
        details: {
            as: "relatedFrequentUserPlace0FkFrequentDateStarts",
            foreignKey: "place_id",
            otherKey: "frequent_date_start",
            through: "frequent_user",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.user",
        schema: "public",
        table: "user",
        source: "generator",
        details: {
            as: "frequentUserPlace0FkUsers",
            foreignKey: "place_id",
            otherKey: "user_id",
            through: "frequent_user",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }]
};